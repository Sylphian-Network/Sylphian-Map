<?xml version="1.0" encoding="utf-8"?>
<templates>
  <template type="public" title="leaflet.less" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[/* required styles */

.leaflet-pane,
.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow,
.leaflet-tile-container,
.leaflet-pane > svg,
.leaflet-pane > canvas,
.leaflet-zoom-box,
.leaflet-image-layer,
.leaflet-layer {
	position: absolute;
	left: 0;
	top: 0;
	}
.leaflet-container {
	overflow: hidden;
	}
.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow {
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
	  -webkit-user-drag: none;
	}
/* Prevents IE11 from highlighting tiles in blue */
.leaflet-tile::selection {
	background: transparent;
}
/* Safari renders non-retina tile on retina better with this, but Chrome is worse */
.leaflet-safari .leaflet-tile {
	image-rendering: -webkit-optimize-contrast;
	}
/* hack that prevents hw layers "stretching" when loading new tiles */
.leaflet-safari .leaflet-tile-container {
	width: 1600px;
	height: 1600px;
	-webkit-transform-origin: 0 0;
	}
.leaflet-marker-icon,
.leaflet-marker-shadow {
	display: block;
	}
/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */
/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */
.leaflet-container .leaflet-overlay-pane svg {
	max-width: none !important;
	max-height: none !important;
	}
.leaflet-container .leaflet-marker-pane img,
.leaflet-container .leaflet-shadow-pane img,
.leaflet-container .leaflet-tile-pane img,
.leaflet-container img.leaflet-image-layer,
.leaflet-container .leaflet-tile {
	max-width: none !important;
	max-height: none !important;
	width: auto;
	padding: 0;
	}

.leaflet-container img.leaflet-tile {
	/* See: https://bugs.chromium.org/p/chromium/issues/detail?id=600120 */
	mix-blend-mode: plus-lighter;
}

.leaflet-container.leaflet-touch-zoom {
	-ms-touch-action: pan-x pan-y;
	touch-action: pan-x pan-y;
	}
.leaflet-container.leaflet-touch-drag {
	-ms-touch-action: pinch-zoom;
	/* Fallback for FF which doesn't support pinch-zoom */
	touch-action: none;
	touch-action: pinch-zoom;
}
.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {
	-ms-touch-action: none;
	touch-action: none;
}
.leaflet-container {
	-webkit-tap-highlight-color: transparent;
}
.leaflet-container a {
	-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);
}
.leaflet-tile {
	filter: inherit;
	visibility: hidden;
	}
.leaflet-tile-loaded {
	visibility: inherit;
	}
.leaflet-zoom-box {
	width: 0;
	height: 0;
	-moz-box-sizing: border-box;
	     box-sizing: border-box;
	z-index: 800;
	}
/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */
.leaflet-overlay-pane svg {
	-moz-user-select: none;
	}

.leaflet-pane         { z-index: 400; }

.leaflet-tile-pane    { z-index: 200; }
.leaflet-overlay-pane { z-index: 400; }
.leaflet-shadow-pane  { z-index: 500; }
.leaflet-marker-pane  { z-index: 600; }
.leaflet-tooltip-pane   { z-index: 650; }
.leaflet-popup-pane   { z-index: 700; }

.leaflet-map-pane canvas { z-index: 100; }
.leaflet-map-pane svg    { z-index: 200; }

.leaflet-vml-shape {
	width: 1px;
	height: 1px;
	}
.lvml {
	behavior: url(#default#VML);
	display: inline-block;
	position: absolute;
	}


/* control positioning */

.leaflet-control {
	position: relative;
	z-index: 800;
	pointer-events: visiblePainted; /* IE 9-10 doesn't have auto */
	pointer-events: auto;
	}
.leaflet-top,
.leaflet-bottom {
	position: absolute;
	z-index: 1000;
	pointer-events: none;
	}
.leaflet-top {
	top: 0;
	}
.leaflet-right {
	right: 0;
	}
.leaflet-bottom {
	bottom: 0;
	}
.leaflet-left {
	left: 0;
	}
.leaflet-control {
	float: left;
	clear: both;
	}
.leaflet-right .leaflet-control {
	float: right;
	}
.leaflet-top .leaflet-control {
	margin-top: 10px;
	}
.leaflet-bottom .leaflet-control {
	margin-bottom: 10px;
	}
.leaflet-left .leaflet-control {
	margin-left: 10px;
	}
.leaflet-right .leaflet-control {
	margin-right: 10px;
	}


/* zoom and fade animations */

.leaflet-fade-anim .leaflet-popup {
	opacity: 0;
	-webkit-transition: opacity 0.2s linear;
	   -moz-transition: opacity 0.2s linear;
	        transition: opacity 0.2s linear;
	}
.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {
	opacity: 1;
	}
.leaflet-zoom-animated {
	-webkit-transform-origin: 0 0;
	    -ms-transform-origin: 0 0;
	        transform-origin: 0 0;
	}
svg.leaflet-zoom-animated {
	will-change: transform;
}

.leaflet-zoom-anim .leaflet-zoom-animated {
	-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);
	   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);
	        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);
	}
.leaflet-zoom-anim .leaflet-tile,
.leaflet-pan-anim .leaflet-tile {
	-webkit-transition: none;
	   -moz-transition: none;
	        transition: none;
	}

.leaflet-zoom-anim .leaflet-zoom-hide {
	visibility: hidden;
	}


/* cursors */

.leaflet-interactive {
	cursor: pointer;
	}
.leaflet-grab {
	cursor: -webkit-grab;
	cursor:    -moz-grab;
	cursor:         grab;
	}
.leaflet-crosshair,
.leaflet-crosshair .leaflet-interactive {
	cursor: crosshair;
	}
.leaflet-popup-pane,
.leaflet-control {
	cursor: auto;
	}
.leaflet-dragging .leaflet-grab,
.leaflet-dragging .leaflet-grab .leaflet-interactive,
.leaflet-dragging .leaflet-marker-draggable {
	cursor: move;
	cursor: -webkit-grabbing;
	cursor:    -moz-grabbing;
	cursor:         grabbing;
	}

/* marker & overlays interactivity */
.leaflet-marker-icon,
.leaflet-marker-shadow,
.leaflet-image-layer,
.leaflet-pane > svg path,
.leaflet-tile-container {
	pointer-events: none;
	}

.leaflet-marker-icon.leaflet-interactive,
.leaflet-image-layer.leaflet-interactive,
.leaflet-pane > svg path.leaflet-interactive,
svg.leaflet-image-layer.leaflet-interactive path {
	pointer-events: visiblePainted; /* IE 9-10 doesn't have auto */
	pointer-events: auto;
	}

/* visual tweaks */

.leaflet-container {
	background: #ddd;
	outline-offset: 1px;
	}
.leaflet-container a {
	color: #0078A8;
	}
.leaflet-zoom-box {
	border: 2px dotted #38f;
	background: rgba(255,255,255,0.5);
	}


/* general typography */
.leaflet-container {
	font-family: "Helvetica Neue", Arial, Helvetica, sans-serif;
	font-size: 12px;
	font-size: 0.75rem;
	line-height: 1.5;
	}


/* general toolbar styles */

.leaflet-bar {
	box-shadow: 0 1px 5px rgba(0,0,0,0.65);
	border-radius: 4px;
	}
.leaflet-bar a {
	background-color: #fff;
	border-bottom: 1px solid #ccc;
	width: 26px;
	height: 26px;
	line-height: 26px;
	display: block;
	text-align: center;
	text-decoration: none;
	color: black;
	}
.leaflet-bar a,
.leaflet-control-layers-toggle {
	background-position: 50% 50%;
	background-repeat: no-repeat;
	display: block;
	}
.leaflet-bar a:hover,
.leaflet-bar a:focus {
	background-color: #f4f4f4;
	}
.leaflet-bar a:first-child {
	border-top-left-radius: 4px;
	border-top-right-radius: 4px;
	}
.leaflet-bar a:last-child {
	border-bottom-left-radius: 4px;
	border-bottom-right-radius: 4px;
	border-bottom: none;
	}
.leaflet-bar a.leaflet-disabled {
	cursor: default;
	background-color: #f4f4f4;
	color: #bbb;
	}

.leaflet-touch .leaflet-bar a {
	width: 30px;
	height: 30px;
	line-height: 30px;
	}
.leaflet-touch .leaflet-bar a:first-child {
	border-top-left-radius: 2px;
	border-top-right-radius: 2px;
	}
.leaflet-touch .leaflet-bar a:last-child {
	border-bottom-left-radius: 2px;
	border-bottom-right-radius: 2px;
	}

/* zoom control */

.leaflet-control-zoom-in,
.leaflet-control-zoom-out {
	font: bold 18px 'Lucida Console', Monaco, monospace;
	text-indent: 1px;
	}

.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {
	font-size: 22px;
	}


/* layers control */

.leaflet-control-layers {
	box-shadow: 0 1px 5px rgba(0,0,0,0.4);
	background: #fff;
	border-radius: 5px;
	}
.leaflet-control-layers-toggle {
	background-image: url(images/layers.png);
	width: 36px;
	height: 36px;
	}
.leaflet-retina .leaflet-control-layers-toggle {
	background-image: url(images/layers-2x.png);
	background-size: 26px 26px;
	}
.leaflet-touch .leaflet-control-layers-toggle {
	width: 44px;
	height: 44px;
	}
.leaflet-control-layers .leaflet-control-layers-list,
.leaflet-control-layers-expanded .leaflet-control-layers-toggle {
	display: none;
	}
.leaflet-control-layers-expanded .leaflet-control-layers-list {
	display: block;
	position: relative;
	}
.leaflet-control-layers-expanded {
	padding: 6px 10px 6px 6px;
	color: #333;
	background: #fff;
	}
.leaflet-control-layers-scrollbar {
	overflow-y: scroll;
	overflow-x: hidden;
	padding-right: 5px;
	}
.leaflet-control-layers-selector {
	margin-top: 2px;
	position: relative;
	top: 1px;
	}
.leaflet-control-layers label {
	display: block;
	font-size: 13px;
	font-size: 1.08333em;
	}
.leaflet-control-layers-separator {
	height: 0;
	border-top: 1px solid #ddd;
	margin: 5px -10px 5px -6px;
	}

/* Default icon URLs */
.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */
	background-image: url(images/marker-icon.png);
	}


/* attribution and scale controls */

.leaflet-container .leaflet-control-attribution {
	background: #fff;
	background: rgba(255, 255, 255, 0.8);
	margin: 0;
	}
.leaflet-control-attribution,
.leaflet-control-scale-line {
	padding: 0 5px;
	color: #333;
	line-height: 1.4;
	}
.leaflet-control-attribution a {
	text-decoration: none;
	}
.leaflet-control-attribution a:hover,
.leaflet-control-attribution a:focus {
	text-decoration: underline;
	}
.leaflet-attribution-flag {
	display: inline !important;
	vertical-align: baseline !important;
	width: 1em;
	height: 0.6669em;
	}
.leaflet-left .leaflet-control-scale {
	margin-left: 5px;
	}
.leaflet-bottom .leaflet-control-scale {
	margin-bottom: 5px;
	}
.leaflet-control-scale-line {
	border: 2px solid #777;
	border-top: none;
	line-height: 1.1;
	padding: 2px 5px 1px;
	white-space: nowrap;
	-moz-box-sizing: border-box;
	     box-sizing: border-box;
	background: rgba(255, 255, 255, 0.8);
	text-shadow: 1px 1px #fff;
	}
.leaflet-control-scale-line:not(:first-child) {
	border-top: 2px solid #777;
	border-bottom: none;
	margin-top: -2px;
	}
.leaflet-control-scale-line:not(:first-child):not(:last-child) {
	border-bottom: 2px solid #777;
	}

.leaflet-touch .leaflet-control-attribution,
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
	box-shadow: none;
	}
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
	border: 2px solid rgba(0,0,0,0.2);
	background-clip: padding-box;
	}


/* popup */

.leaflet-popup {
	position: absolute;
	text-align: center;
	margin-bottom: 20px;
	}
.leaflet-popup-content-wrapper {
	padding: 1px;
	text-align: left;
	border-radius: 12px;
	}
.leaflet-popup-content {
	margin: 13px 24px 13px 20px;
	line-height: 1.3;
	font-size: 13px;
	font-size: 1.08333em;
	min-height: 1px;
	}
.leaflet-popup-content p {
	margin: 17px 0;
	margin: 1.3em 0;
	}
.leaflet-popup-tip-container {
	width: 40px;
	height: 20px;
	position: absolute;
	left: 50%;
	margin-top: -1px;
	margin-left: -20px;
	overflow: hidden;
	pointer-events: none;
	}
.leaflet-popup-tip {
	width: 17px;
	height: 17px;
	padding: 1px;

	margin: -10px auto 0;
	pointer-events: auto;

	-webkit-transform: rotate(45deg);
	   -moz-transform: rotate(45deg);
	    -ms-transform: rotate(45deg);
	        transform: rotate(45deg);
	}
.leaflet-popup-content-wrapper,
.leaflet-popup-tip {
	background: white;
	color: #333;
	box-shadow: 0 3px 14px rgba(0,0,0,0.4);
	}
.leaflet-container a.leaflet-popup-close-button {
	position: absolute;
	top: 0;
	right: 0;
	border: none;
	text-align: center;
	width: 24px;
	height: 24px;
	font: 16px/24px Tahoma, Verdana, sans-serif;
	color: #757575;
	text-decoration: none;
	background: transparent;
	}
.leaflet-container a.leaflet-popup-close-button:hover,
.leaflet-container a.leaflet-popup-close-button:focus {
	color: #585858;
	}
.leaflet-popup-scrolled {
	overflow: auto;
	}

.leaflet-oldie .leaflet-popup-content-wrapper {
	-ms-zoom: 1;
	}
.leaflet-oldie .leaflet-popup-tip {
	width: 24px;
	margin: 0 auto;

	-ms-filter: "progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)";
	filter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);
	}

.leaflet-oldie .leaflet-control-zoom,
.leaflet-oldie .leaflet-control-layers,
.leaflet-oldie .leaflet-popup-content-wrapper,
.leaflet-oldie .leaflet-popup-tip {
	border: 1px solid #999;
	}


/* div icon */

.leaflet-div-icon {
	background: #fff;
	border: 1px solid #666;
	}


/* Tooltip */
/* Base styles for the element that has a tooltip */
.leaflet-tooltip {
	position: absolute;
	padding: 6px;
	background-color: #fff;
	border: 1px solid #fff;
	border-radius: 3px;
	color: #222;
	white-space: nowrap;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	pointer-events: none;
	box-shadow: 0 1px 3px rgba(0,0,0,0.4);
	}
.leaflet-tooltip.leaflet-interactive {
	cursor: pointer;
	pointer-events: auto;
	}
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
	position: absolute;
	pointer-events: none;
	border: 6px solid transparent;
	background: transparent;
	content: "";
	}

/* Directions */

.leaflet-tooltip-bottom {
	margin-top: 6px;
}
.leaflet-tooltip-top {
	margin-top: -6px;
}
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-top:before {
	left: 50%;
	margin-left: -6px;
	}
.leaflet-tooltip-top:before {
	bottom: 0;
	margin-bottom: -12px;
	border-top-color: #fff;
	}
.leaflet-tooltip-bottom:before {
	top: 0;
	margin-top: -12px;
	margin-left: -6px;
	border-bottom-color: #fff;
	}
.leaflet-tooltip-left {
	margin-left: -6px;
}
.leaflet-tooltip-right {
	margin-left: 6px;
}
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
	top: 50%;
	margin-top: -6px;
	}
.leaflet-tooltip-left:before {
	right: 0;
	margin-right: -12px;
	border-left-color: #fff;
	}
.leaflet-tooltip-right:before {
	left: 0;
	margin-left: -12px;
	border-right-color: #fff;
	}

/* Printing */

@media print {
	/* Prevent printers from removing background-images of controls. */
	.leaflet-control {
		-webkit-print-color-adjust: exact;
		print-color-adjust: exact;
		}
	}]]></template>
  <template type="public" title="leaflet_awesome_markers.less" version_id="1000020" version_string="1.0.2"><![CDATA[/*
    Author: L. Voogdt
    License: MIT
    Version: 1.0
    Modified to work with XenForo SVG icons
    */

    /* Marker setup */
    .awesome-marker {
      background: url('/js/sylphian/map/leaflet/images/markers-soft.png') no-repeat 0 0;
      width: 35px;
      height: 46px;
      position: absolute;
      left: 0;
      top: 0;
      display: block;
      text-align: center;
    }

    .awesome-marker-shadow {
      background: url('/js/sylphian/map/leaflet/images/markers-shadow.png') no-repeat 0 0;
      width: 36px;
      height: 16px;
    }

    /* Retina displays */
    @media (min--moz-device-pixel-ratio: 1.5),(-o-min-device-pixel-ratio: 3/2),
    (-webkit-min-device-pixel-ratio: 1.5),(min-device-pixel-ratio: 1.5),(min-resolution: 1.5dppx) {
     .awesome-marker {
      background-image: url('/js/sylphian/map/leaflet/images/markers-soft@2x.png');
      background-size: 720px 46px;
     }
     .awesome-marker-shadow {
      background-image: url('/js/sylphian/map/leaflet/images/markers-shadow@2x.png');
      background-size: 35px 16px;
     }
    }

    /* XenForo SVG icon styles */
    .awesome-marker .fa--xf {
      margin-top: 10px;
      display: inline-block;
      font-size: 16px;
      line-height: 16px;
      width: 16px;
      height: 16px;
    }

    .awesome-marker .fa--xf svg {
      width: 1em;
      height: 1em;
      vertical-align: -0.125em;
      font-size: inherit;
      display: inline-block;
      fill: currentColor;
    }


    .awesome-marker .icon-white {
      color: #fff;
    }

    .awesome-marker .icon-black {
      color: #000;
    }

    /* Colors */
    .awesome-marker-icon-red {
      background-position: 0 0;
    }

    .awesome-marker-icon-darkred {
      background-position: -180px 0;
    }

    .awesome-marker-icon-lightred {
      background-position: -360px 0;
    }

    .awesome-marker-icon-orange {
      background-position: -36px 0;
    }

    .awesome-marker-icon-beige {
      background-position: -396px 0;
    }

    .awesome-marker-icon-green {
      background-position: -72px 0;
    }

    .awesome-marker-icon-darkgreen {
      background-position: -252px 0;
    }

    .awesome-marker-icon-lightgreen {
      background-position: -432px 0;
    }

    .awesome-marker-icon-blue {
      background-position: -108px 0;
    }

    .awesome-marker-icon-darkblue {
      background-position: -216px 0;
    }

    .awesome-marker-icon-lightblue {
      background-position: -468px 0;
    }

    .awesome-marker-icon-purple {
      background-position: -144px 0;
    }

    .awesome-marker-icon-darkpurple {
      background-position: -288px 0;
    }

    .awesome-marker-icon-pink {
      background-position: -504px 0;
    }

    .awesome-marker-icon-cadetblue {
      background-position: -324px 0;
    }

    .awesome-marker-icon-white {
      background-position: -576px 0;
    }

    .awesome-marker-icon-gray {
      background-position: -648px 0;
    }

    .awesome-marker-icon-lightgray {
      background-position: -612px 0;
    }

    .awesome-marker-icon-black {
      background-position: -682px 0;
    }]]></template>
  <template type="public" title="sylphian_map" version_id="1000020" version_string="1.0.2"><![CDATA[<xf:title>{{ phrase('nav.map') }}</xf:title>

<xf:css src="public:leaflet.less" />
<xf:js src="sylphian/map/leaflet/leaflet.js" min="1" addon="Sylphian/Map" />
<xf:css src="public:leaflet_awesome_markers.less" />
<xf:js src="sylphian/map/leaflet/leaflet.awesome-markers.js" min="1" addon="Sylphian/Map" />

<xf:css src="public:sylphian_map.less" />

<xf:if is="$xf.visitor.hasPermission('general', 'suggestMarkers')">
	<xf:pageaction>
		<xf:button href="{{ link('map/suggest') }}" 
					class="button--primary" 
					overlay="true">
			<xf:fa icon="fa-lightbulb" /> {{ phrase('suggest_marker') }}
		</xf:button>
		
		<xf:if is="$canManageMarkers">
			<xf:button href="{{ link('map/management') }}" class="button">
				<xf:fa icon="fa-cog" /> {{ phrase('manage_markers') }}
			</xf:button>
			
			<xf:if is="$xf.visitor.hasPermission('general', 'manageSuggestedMapMarkers')">
				<xf:button href="{{ link('map/suggestion') }}" class="button">
					{{ phrase('manage_suggestion_markers') }}
					<xf:if is="$pendingSuggestions">
						<span class="badge badge--highlighted">{{ $pendingSuggestions }}</span>
					</xf:if>
				</xf:button>
			</xf:if>
		</xf:if>
	</xf:pageaction>
</xf:if>

<div class="block">
    <div class="block-container">
        <div class="block-body">
            <div id="mapContainer" style="height: 500px;"></div>
        </div>
    </div>
</div>

<div class="block">
    <div class="block-container">
        <h2 class="block-header">{{ phrase('filter_by_type') }}</h2>
        <div class="block-body">
            <div class="block-row">
                <div class="formRow">
                    <div class="formRow-main">
						<div id="mapIconFilters" class="inputChoices inputChoices--multiple">
							<xf:foreach loop="$markerTypes" value="$type">
								<label class="inputChoice">
									<input type="checkbox" 
										   class="js-typeFilter" 
										   value="{{ $type.name }}" 
										   checked="checked" 
										   data-type="{{ $type.name }}" />
									<span class="inputChoice-label">{{ $type.name }}</span>
								</label>
							</xf:foreach>
						</div>
                    </div>
                </div>
            </div>
            <div class="block-row formSubmitRow formSubmitRow--sticky formSubmitRow--simple">
                <div class="formSubmitRow-main">
                    <div class="formSubmitRow-controls">
                        <xf:button class="button--primary" id="applyMapFilters">{{ phrase('apply_filters') }}</xf:button>
                        <xf:button class="button--link" id="resetMapFilters">{{ phrase('reset_filters') }}</xf:button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<xf:js>
(function() {
    if (!window.L || !L.AwesomeMarkers) {
        console.error('Leaflet or AwesomeMarkers not loaded.');
        return;
    }

    const markersData = {{ $markers|json }};
    const markerTypes = {{ $markerTypes|json }};
    
    const map = L.map('mapContainer').setView(
        [{{ $mapCenter.lat }}, {{ $mapCenter.lng }}],
        {{ $startingZoom }}
    );

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
		minZoom: {{ $minZoom }},
		maxZoom: {{ $maxZoom }},
		attribution: 'Map data from <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
	}).addTo(map);
    
    const markerGroup = L.layerGroup().addTo(map);
    const markersByType = {};
    
    markerTypes.forEach(type => {
        markersByType[type.name] = [];
    });
    
    markersData.forEach(markerData => {
        const marker = L.marker(
            [markerData.lat, markerData.lng],
            {
                icon: L.AwesomeMarkers.icon({
                    icon: markerData.icon,
                    iconVar: markerData.iconVar,
                    iconColor: markerData.iconColor,
                    markerColor: markerData.markerColor
                })
            }
        ).bindPopup(`
			<strong>${markerData.title}</strong><br>
			${markerData.content}<br>
			<small style="color: #666;">
				<xf:fa icon="fa-map-marker-alt" /> ${markerData.lat}, ${markerData.lng}
			</small>
		`);
        
        if (!markersByType[markerData.type]) {
            markersByType[markerData.type] = [];
        }
        markersByType[markerData.type].push(marker);
    });
    
    function updateMarkers() {
        markerGroup.clearLayers();
        
        const selectedTypes = Array.from(
            document.querySelectorAll('.js-typeFilter:checked')
        ).map(cb => cb.dataset.type);
        
        selectedTypes.forEach(type => {
            if (markersByType[type]) {
                markersByType[type].forEach(marker => {
                    markerGroup.addLayer(marker);
                });
            }
        });
    }
    
    document.getElementById('applyMapFilters').addEventListener('click', function() {
        updateMarkers();
    });
    
    document.getElementById('resetMapFilters').addEventListener('click', function() {
        document.querySelectorAll('.js-typeFilter').forEach(cb => {
            cb.checked = true;
        });
        updateMarkers();
    });
    
    updateMarkers();
})();
</xf:js>]]></template>
  <template type="public" title="sylphian_map.less" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[#mapContainer {
    height: 500px;
    width: 100%;
    box-sizing: border-box;
    display: block;
	z-index: 1;
}

#mapIconFilters {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    margin-bottom: 15px;
}

.map-icon-filter-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    padding: 4px 8px;
    border-radius: 3px;
    background-color: rgba(0, 0, 0, 0.02);
    border: 1px solid rgba(0, 0, 0, 0.05);
}

.map-icon-filter-item:hover {
    background-color: rgba(0, 0, 0, 0.04);
}

.map-icon-filter-item label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-size: 13px;
    color: @xf-textColor;
}

.map-icon-filter-item input[type="checkbox"] {
    margin-right: 8px;
}

.map-icon-filter-item .icon-preview {
    margin-left: 8px;
    width: 20px;
    height: 20px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.03);
    border-radius: 3px;
    padding: 3px;
}

.map-icon-filter-item .icon-preview svg {
    width: 2em;
    height: 2em;
}]]></template>
  <template type="public" title="sylphian_map_management" version_id="1000020" version_string="1.0.2"><![CDATA[<xf:title>{{ phrase('manage_markers') }}</xf:title>

<div class="block">
    <div class="block-container">
        <h2 class="block-header">{{ phrase('current_markers') }}</h2>
        <div class="block-body">
            <xf:datalist>
                <xf:datarow rowtype="header">
                    <xf:cell>{{ phrase('title') }}</xf:cell>
                    <xf:cell>{{ phrase('type') }}</xf:cell>
                    <xf:cell>{{ phrase('icon') }}</xf:cell>
                    <xf:cell>{{ phrase('position') }}</xf:cell>
                    <xf:cell>{{ phrase('created_by') }}</xf:cell>
                    <xf:cell>{{ phrase('update_date') }}</xf:cell>
                    <xf:cell>{{ phrase('creation_date') }}</xf:cell>
                    <xf:cell>{{ phrase('status') }}</xf:cell>
                    <xf:cell></xf:cell>
                    <xf:cell></xf:cell>
                </xf:datarow>
        
                <xf:foreach loop="$allMarkers" value="$marker">
                    <xf:datarow>
                        <xf:main label="{{ $marker.title }}" />
                        <xf:cell>{{ $marker.type }}</xf:cell>
                        <xf:cell>
                            <xf:fa icon="fa-{{ $marker.icon }}" fw="true" /> 
                        </xf:cell>
                        <xf:cell>
                            <span title="{{ $marker.lat }}, {{ $marker.lng }}">
                                <xf:fa icon="fa-map-marker-alt" /> {{ $marker.lat | number(4) }}, {{ $marker.lng | number(4) }}
                            </span>
                        </xf:cell>
                        <xf:cell>
                            <xf:if is="$marker.User">
                                <xf:username user="$marker.User" />
                            <xf:else />
                                {{ phrase('unknown') }}
                            </xf:if>
                        </xf:cell>
                        <xf:cell>
                            {{ date($marker.update_date, 'M j, Y g:i A') }}
                        </xf:cell>
                        <xf:cell>
                            {{ date($marker.create_date, 'M j, Y g:i A') }}
                        </xf:cell>
                        <xf:cell>
                            <xf:if is="$marker.active">
                                <span class="label label--success">
                                    <xf:fa icon="fa-check" /> {{ phrase('active') }}
                                </span>
                            <xf:else />
                                <span class="label label--warning">
                                    <xf:fa icon="fa-ban" /> {{ phrase('inactive') }}
                                </span>
                            </xf:if>
                        </xf:cell>
                        <xf:action href="{{ link('map/edit', null, {'marker_id': $marker.marker_id}) }}" 
                                 overlay="true"
                                 title="{{ phrase('edit_marker') }}">
                            <xf:fa icon="fa-edit" />
                        </xf:action>
                        <xf:action href="{{ link('map/delete', null, {'marker_id': $marker.marker_id}) }}"
                                  overlay="true"
                                  title="{{ phrase('delete_marker') }}">
                            <xf:fa icon="fa-trash" />
                        </xf:action>
                    </xf:datarow>
                </xf:foreach>
            </xf:datalist>
            
            <div class="block-footer">
                <span class="block-footer-controls">
                    <xf:button href="{{ link('map/add') }}" 
                               class="button--primary" 
                               data-xf-click="overlay">
                        <xf:fa icon="fa-plus" /> {{ phrase('add_new_marker') }}
                    </xf:button>
                </span>
            </div>
        </div>
    </div>
</div>

<div style="display: flex; justify-content: center;">
	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}" 
				link="map/management" 
				params="{$pageNavParams}"/>
</div>]]></template>
  <template type="public" title="sylphian_map_marker_form" version_id="1000040" version_string="1.0.4"><![CDATA[<xf:title>{{ phrase_dynamic($formType) }}</xf:title>

<xf:js src="sylphian/map/form-geolocation-fetcher.js" min="1" addon="Sylphian/Map" />

<xf:form action="{{ $formAction }}" class="block" ajax="true">
    <div class="block-container">
        <div class="block-body">
            <xf:textboxrow name="title" value="{{ $entity.title }}" 
                         label="{{ phrase('title') }}" 
                         required="required" 
                         maxlength="100" />
                         
            <xf:textarearow name="content" value="{{ $entity.content }}"
                          label="{{ phrase('content') }}" 
                          rows="3" />
                          
            <xf:numberboxrow name="lat" value="{{ $entity.lat }}"
                           label="{{ phrase('latitude') }}"
                           required="required"
                           step="any" />
                           
            <xf:numberboxrow name="lng" value="{{ $entity.lng }}"
                           label="{{ phrase('longitude') }}"
                           required="required"
                           step="any" />

			<xf:formrow label="">
				<xf:button class="button--primary" id="use-my-location" data-xf-init="sylphian-location-button">
					<xf:fa icon="fa-map-marker-alt" />
					{{ phrase('use_my_location') }}
				</xf:button>
				<span id="location-status" style="margin-left: 10px; display: none;">
					<xf:fa icon="fa-spinner fa-spin" /> {{ phrase('fetching_location') }}
				</span>
			</xf:formrow>
                           
            <xf:textboxrow name="type" value="{{ $entity.type }}"
                         label="{{ phrase('type') }}"
                         required="required"
                         maxlength="50" />
                         
            <xf:textboxrow name="icon" value="{{ $entity.icon }}"
                         label="{{ phrase('icon') }}"
                         maxlength="50"
                         placeholder="home"
                         explain="{{ phrase('specify_fontawesome_icon_name') }}" />
                         
            <xf:selectrow name="icon_var" value="{{ $entity.icon_var ?: 'solid' }}"
                        label="{{ phrase('icon_variant') }}">
                <xf:option value="light">{{ phrase('light') }}</xf:option>
                <xf:option value="regular">{{ phrase('regular') }}</xf:option>
                <xf:option value="solid">{{ phrase('solid') }}</xf:option>
                <xf:option value="duotone">{{ phrase('duotone') }}</xf:option>
                <xf:option value="brands">{{ phrase('brands') }}</xf:option>
            </xf:selectrow>
            
            <xf:textboxrow name="icon_color" value="{{ $entity.icon_color ?: 'black' }}"
                         label="{{ phrase('icon_color') }}"
                         placeholder="black"
                         maxlength="30" />
            
            <xf:selectrow name="marker_color" value="{{ $entity.marker_color ?: 'blue' }}"
                        label="{{ phrase('marker_color') }}">
                <xf:option value="red">{{ phrase('red') }}</xf:option>
                <xf:option value="darkred">{{ phrase('darkred') }}</xf:option>
                <xf:option value="lightred">{{ phrase('lightred') }}</xf:option>
                <xf:option value="orange">{{ phrase('orange') }}</xf:option>
                <xf:option value="beige">{{ phrase('beige') }}</xf:option>
                <xf:option value="green">{{ phrase('green') }}</xf:option>
                <xf:option value="darkgreen">{{ phrase('darkgreen') }}</xf:option>
                <xf:option value="lightgreen">{{ phrase('lightgreen') }}</xf:option>
                <xf:option value="blue">{{ phrase('blue') }}</xf:option>
                <xf:option value="darkblue">{{ phrase('darkblue') }}</xf:option>
                <xf:option value="lightblue">{{ phrase('lightblue') }}</xf:option>
                <xf:option value="purple">{{ phrase('purple') }}</xf:option>
                <xf:option value="darkpurple">{{ phrase('darkpurple') }}</xf:option>
                <xf:option value="pink">{{ phrase('pink') }}</xf:option>
                <xf:option value="cadetblue">{{ phrase('cadetblue') }}</xf:option>
                <xf:option value="white">{{ phrase('white') }}</xf:option>
                <xf:option value="gray">{{ phrase('gray') }}</xf:option>
                <xf:option value="lightgray">{{ phrase('lightgray') }}</xf:option>
                <xf:option value="black">{{ phrase('black') }}</xf:option>
            </xf:selectrow>
            
            <xf:if is="$formType != 'suggest' && $canManageActive">
                <xf:checkboxrow>
                    <xf:option name="active" selected="{{ $entity.active !== false }}"
                             label="{{ phrase('active') }}" />
                </xf:checkboxrow>
            </xf:if>
        </div>
        
        <xf:submitrow sticky="true" icon="save" 
                     label="{{ $formType == 'suggest' ? phrase('suggest_marker') : '' }}" />
    </div>
</xf:form>]]></template>
  <template type="public" title="sylphian_map_suggestion_process" version_id="1000030" version_string="1.0.3"><![CDATA[<xf:title>{{ phrase_dynamic($processTitle) }}</xf:title>

<xf:form action="{{ link($actionType == 'approve' ? 'map/approve-suggestion' : 'map/reject-suggestion', null, {'suggestion_id': $suggestion.suggestion_id}) }}" class="block" ajax="true">
    <div class="block-container">
        <h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
            <a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="detailsTab">{{ phrase('details') }}</a>
            <a class="tabs-tab" role="tab" tabindex="0" aria-controls="appearanceTab">{{ phrase('appearance') }}</a>
            <a class="tabs-tab" role="tab" tabindex="0" aria-controls="locationTab">{{ phrase('location') }}</a>
        </h2>

        <ul class="tabPanes">
            <!-- Details Tab -->
            <li class="is-active" role="tabpanel" id="detailsTab">
                <div class="block-body">
                    <xf:formrow label="{{ phrase('title') }}">
                        {{ $suggestion.title }}
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('content') }}">
                        {{ $suggestion.content ?: phrase('none') }}
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('type') }}">
                        {{ $suggestion.type ?: phrase('none') }}
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('suggested_by') }}">
                        <xf:if is="$suggestion.User">
                            <xf:username user="$suggestion.User" />
                        <xf:else />
                            {{ phrase('unknown') }}
                        </xf:if>
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('suggested_on') }}">
                        {{ date($suggestion.create_date, 'M j, Y g:i A') }}
                    </xf:formrow>
                    
                    <xf:if is="$actionType == 'reject'">
                        <xf:formrow rowtype="explainRow">
                            <div class="blockMessage blockMessage--warning">
                                {{ phrase('reject_marker_warning') }}
                            </div>
                        </xf:formrow>
                    </xf:if>
                </div>
            </li>
            
            <!-- Appearance Tab -->
            <li role="tabpanel" id="appearanceTab">
                <div class="block-body">
                    <xf:formrow label="{{ phrase('icon') }}">
                        <div class="iconPreview">
                            <span class="iconContainer" style="background-color: {{ $suggestion.marker_color }}; color: {{ $suggestion.icon_color }}; display: inline-block; width: 30px; height: 30px; border-radius: 50%; text-align: center; line-height: 30px;">
                                <xf:fa icon="fa-{{ $suggestion.icon ?: 'map-marker-alt' }}" fw="true" />
                            </span>
                            {{ $suggestion.icon ?: phrase('default') }}
                        </div>
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('icon_variant') }}">
                        {{ $suggestion.icon_var ?: 'solid' }}
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('icon_color') }}">
                        <div style="display: flex; align-items: center;">
                            <div style="width: 20px; height: 20px; background-color: {{ $suggestion.icon_color }}; border-radius: 3px; margin-right: 10px;"></div>
                            {{ $suggestion.icon_color }}
                        </div>
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('marker_color') }}">
                        <div style="display: flex; align-items: center;">
                            <div style="width: 20px; height: 20px; background-color: {{ $suggestion.marker_color }}; border-radius: 3px; margin-right: 10px;"></div>
                            {{ $suggestion.marker_color }}
                        </div>
                    </xf:formrow>
                </div>
            </li>
            
            <!-- Location Tab -->
            <li role="tabpanel" id="locationTab">
                <div class="block-body">
                    <xf:formrow label="{{ phrase('latitude') }}">
                        {{ $suggestion.lat }}
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('longitude') }}">
                        {{ $suggestion.lng }}
                    </xf:formrow>
                    
                    <xf:formrow label="{{ phrase('preview') }}">
                        <div class="mapPreviewContainer" style="height: 300px; width: 100%;" data-lat="{{ $suggestion.lat }}" data-lng="{{ $suggestion.lng }}" data-icon="{{ $suggestion.icon }}" data-icon-var="{{ $suggestion.icon_var }}" data-icon-color="{{ $suggestion.icon_color }}" data-marker-color="{{ $suggestion.marker_color }}" data-title="{{ $suggestion.title }}">
                            <div id="suggestionMapPreview" data-xf-init="sylphian-map-preview" style="height: 100%; width: 100%;"></div>
                        </div>
                    </xf:formrow>
                </div>
            </li>
        </ul>
		
        <xf:submitrow sticky="true" 
                      icon="{{ $actionType == 'approve' ? 'check' : 'delete' }}"/>
    </div>
</xf:form>

<xf:css src="public:leaflet.less" />
<xf:js src="sylphian/map/leaflet/leaflet.js" min="1" addon="Sylphian/Map" />
<xf:css src="public:leaflet_awesome_markers.less" />
<xf:js src="sylphian/map/leaflet/leaflet.awesome-markers.js" min="1" addon="Sylphian/Map" />

<xf:js src="sylphian/map/suggestion-process.js" min="1" addon="Sylphian/Map" />]]></template>
  <template type="public" title="sylphian_map_suggestions" version_id="1000020" version_string="1.0.2"><![CDATA[<xf:title>{{ phrase('marker_suggestions') }}</xf:title>

<div class="block">
    <div class="block-container">
        <h2 class="block-header">{{ phrase('marker_suggestions') }}</h2>
        <div class="block-body">
            <xf:if is="$pendingSuggestions">
                <xf:datalist>
                    <xf:datarow rowtype="header">
                        <xf:cell>{{ phrase('title') }}</xf:cell>
                        <xf:cell>{{ phrase('type') }}</xf:cell>
                        <xf:cell>{{ phrase('icon') }}</xf:cell>
                        <xf:cell>{{ phrase('position') }}</xf:cell>
                        <xf:cell>{{ phrase('suggested_by') }}</xf:cell>
                        <xf:cell>{{ phrase('suggestion_date') }}</xf:cell>
                        <xf:cell></xf:cell>
                        <xf:cell></xf:cell>
                    </xf:datarow>
            
                    <xf:foreach loop="$pendingSuggestions" value="$suggestion">
                        <xf:datarow>
                            <xf:main label="{{ $suggestion.title }}" />
                            <xf:cell>{{ $suggestion.type }}</xf:cell>
                            <xf:cell>
                                <xf:fa icon="fa-{{ $suggestion.icon }}" fw="true" /> 
                            </xf:cell>
                            <xf:cell>
                                <span title="{{ $suggestion.lat }}, {{ $suggestion.lng }}">
                                    <xf:fa icon="fa-map-marker-alt" /> {{ $suggestion.lat | number(4) }}, {{ $suggestion.lng | number(4) }}
                                </span>
                            </xf:cell>
                            <xf:cell>
                                <xf:if is="$suggestion.User">
                                    <xf:username user="$suggestion.User" />
                                <xf:else />
                                    {{ phrase('unknown') }}
                                </xf:if>
                            </xf:cell>
                            <xf:cell>
                                {{ date($suggestion.create_date, 'M j, Y g:i A') }}
                            </xf:cell>
                            <xf:action href="{{ link('map/approve-suggestion', null, {'suggestion_id': $suggestion.suggestion_id}) }}" 
                                     overlay="true"
                                     title="{{ phrase('approve_suggestion') }}">
                                <xf:fa icon="fa-check" class="u-accentColor" />
                            </xf:action>
                            <xf:action href="{{ link('map/reject-suggestion', null, {'suggestion_id': $suggestion.suggestion_id}) }}"
                                      overlay="true"
                                      title="{{ phrase('reject_suggestion') }}">
                                <xf:fa icon="fa-times" class="u-negativeColor" />
                            </xf:action>
                        </xf:datarow>
                    </xf:foreach>
                </xf:datalist>
            <xf:else />
                <div class="block-row">
                    {{ phrase('no_pending_marker_suggestions') }}
                </div>
            </xf:if>
        </div>
    </div>
</div>

<div style="display: flex; justify-content: center;">
	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}" 
				link="map/suggestion" 
				params="{$pageNavParams}"/>
</div>]]></template>
</templates>
